<?xml version="1.0" encoding="UTF-8"?>
<!--
$Id: build.xml,v 1.46 2009/10/23 19:57:58 rk903 Exp $
-->
<project name="QueryProcessor" basedir="." default="dist">

	<property name="Name" value="QueryProcessor" />
	<import file="../edu.harvard.i2b2.common/common_build.xml" />
	<property environment="env" />
	<!-- uploader project path -->
	<property name="crcUploaderProject"    value="edu.harvard.i2b2.crc.loader" />
	
	<!-- OTHER SETTINGS -->
	<property name="ejbspec" value="2.0" />
	<property name="jboss.version" value="4.0" />


	<property file="etc/spring/crc_application_directory.properties" />
	<property file="db.oracle.properties" />

	<!-- =================================================================== -->
	<!-- 								INIT 								 -->
	<!-- =================================================================== -->
	<target name="init" depends="common_init,common-classpath" description="Prepare for build">
		<path id="classpath">
			<path refid="common-classpath" />
			<fileset dir="${genlib}">
				<include name="*.jar" />
			</fileset>
			<!-- uploader webservice class path --> 
			<pathelement location="../${crcUploaderProject}/classes" />
			<pathelement location="${classes}" />
			<pathelement location="../${i2b2CommonProject}/dist/i2b2Common-core.jar" />
		</path>
		<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
			<classpath refid="classpath" />
		</taskdef>
	</target>



	<!-- =================================================================== -->
	<!-- 								COMMON JAXB GENERATION 				 -->
	<!-- =================================================================== -->
	<target name="jaxb_gen" depends="init" description="Generate JAXB classes for i2b2 and Patient Data messages">

		<xjc extension="true" destdir="${gensrc}" removeOldOutput="no">
			<schema dir="../${i2b2xmlproject}/xsd/hive/pdo_1.1" includes="i2b2_PDO.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/cell/crc/pdo_1.1" includes="CRC_PDO_QRY.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/hive/msg_1.1" includes="i2b2_response.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/hive/msg_1.1" includes="i2b2_result_msg.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/cell/crc/psm_1.1" includes="CRC_PSM_QRY.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/cell/crc/psm_1.1" includes="CRC_PSM_QRY_query_definition.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/cell/crc/psm_1.1" includes="CRC_PSM_QRY_analysis_definition.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/cell/pm_1.1" includes="PM_USER.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/cell/ont_1.1" includes="ONT_QRY.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/cell/ont_1.1" includes="ONT_RESP.xsd" />
			<binding dir="." includes="etc/xsd/i2b2_response.xjb" />
			<binding dir="." includes="etc/xsd/crc_psm_qry.xjb" />
			<binding dir="." includes="etc/xsd/crc_psm_querydefinition.xjb" />
			<binding dir="." includes="etc/xsd/crc_psm_analysisdefinition.xjb" />
			<binding dir="." includes="etc/xsd/i2b2_pm_bindings.xjb" />
			<binding dir="." includes="etc/xsd/crc_ontology_bindings.xjb" />
			<binding dir="." includes="etc/xsd/crc_hive_result.xjb" />
			<binding dir="." includes="etc/xsd/i2b2_pdo.xjb" />
			<binding dir="." includes="etc/xsd/crc_pdo_qry.xjb" />
		</xjc>
	</target>


	<!-- =================================================================== -->
	<!-- 								CLEAN 								 -->
	<!-- =================================================================== -->
	<target name="clean" depends="common_clean" description="Clean all build products" />



	<!-- =================================================================== -->
	<!-- 								COMPILE 							 -->
	<!-- =================================================================== -->
	<target name="compile" depends="init" description="Compile files without cleaning">
		<mkdir dir="${classes}" />
		<javac destdir="${classes}" optimize="${javac.opt}" debug="${javac.debug}">
			<src path="${gensrc}" />
			<src path="${src}/server/" />
			<src path="${src}/test" />
			<src path="${src}/client" />
			<classpath refid="classpath" />
		</javac>
	</target>


	<!-- =================================================================== -->
	<!-- 								DIST 								 -->
	<!-- =================================================================== -->
	<target name="dist" depends="init,jaxb_gen,generate-ejb,compile" description="package application for distribution/deployment">
		<!-- Package EJB for jboss -->
		<echo message="${Name}: Creating the ejb archive package!" />
		<jar destfile="${dist}/${Name}-EJB.jar" manifest="${etc}/manifest/MANIFEST.MF">
			<fileset dir="${classes}">
				<exclude name="edu/harvard/i2b2/crc/axis2/**/**" />
				<exclude name="edu/harvard/i2b2/crc/delegate/**" />
				<exclude name="edu/harvard/i2b2/crc/ejb/analysis/**" />
				<exclude name="edu/harvard/i2b2/crc/ejb/role/**" />
			</fileset>
			<fileset dir="${classes}">
				<include name="edu/harvard/i2b2/crc/delegate/ontology/**" />
				<include name="edu/harvard/i2b2/crc/delegate/ejbpm/**" />
			</fileset>
			
			
			<zipfileset dir="${gensrc}" prefix="META-INF" includes="ejb-jar.xml" />
			<zipfileset dir="${etc}/jboss" prefix="META-INF" includes="jboss.xml" />
			
			
		</jar>

		<jar destfile="${dist}/QP-An-EJB.jar">
					<fileset dir="${classes}">
						<exclude name="edu/harvard/i2b2/crc/axis2/**/**" />
						<exclude name="edu/harvard/i2b2/crc/delegate/**" />
						<exclude name="edu/harvard/i2b2/crc/ejb/**" />
						<exclude name="ejb.xml"/>
					</fileset>
					<fileset dir="${classes}">
						<include name="edu/harvard/i2b2/crc/ejb/analysis/**" />
						<include name="edu/harvard/i2b2/crc/ejb/role/**" />
					</fileset>
		</jar>
		
		<jar destfile="${dist}/query_processor.sar">
					<fileset dir="${classes}">
						<include name="edu/harvard/i2b2/crc/mbean/**" />
					</fileset>
					<zipfileset dir="${src}/server/edu/harvard/i2b2/crc/mbean/META-INF" prefix="META-INF" includes="jboss-service.xml" />
				</jar>
		
		<ear destfile="${dist}/QP1.ear" appxml="etc/application.xml">
				
				<zipfileset dir="${dist}"  includes="${Name}-EJB.jar" />
				<zipfileset dir="${dist}"  includes="QP-An-EJB.jar" />
			    <!--
			    <zipfileset dir="${dist}"  includes="query_processor.sar" />
			    -->
				<!-- server.jar in lib -->
			      <zipfileset dir="../${i2b2CommonProject}/lib/axis2-1.1" prefix="lib" includes="*.jar" />
			     <zipfileset dir="../${i2b2CommonProject}/dist/" prefix="lib" includes="*.jar" />
	    </ear>
		
		
		
		<antcall target="dist-server" />
		<antcall target="axis2aar" />
		<antcall target="dist-client" />
		<!--
		<antcall target="hibernate-har" />
		-->

	</target>

	<!-- =================================================================== -->
	<!-- 								SERVER DIST							 -->
	<!-- =================================================================== -->
	<target name="dist-server" depends="init,compile" description="package application for distribution/deployment">
		<echo message="${Name}: Creating the server archive package!" />
		<jar compress="true" jarfile="${dist}/${Name}-Server.jar">
			<fileset dir="${etc}/spring">
				<include name="crc_application_directory.*" />
			</fileset>
			<zipfileset dir="${classes}/edu/harvard/i2b2/crc/delegate/pdo"   includes="pdo_template.xml" />
		</jar>
	</target>

	<!-- =================================================================== -->
	<!-- 								CLIENT DIST							 -->
	<!-- =================================================================== -->
	<target name="dist-client" depends="init,compile" description="package application for distribution/deployment">
		<jar destfile="${dist}/${Name}-client.jar">
			<fileset dir="${classes}">
				<!-- <include name="edu/harvard/i2b2/querytool/axis2/**/**" /> -->
				<exclude name="edu/harvard/i2b2/crc/axis2/**/**" />
				<include name="edu/harvard/i2b2/crc/datavo/**/**" />
			</fileset>
		</jar>
	</target>




	<!-- =================================================================== -->
	<!-- 								Generate EJB						 -->
	<!-- =================================================================== -->
	<target name="generate-ejb" depends="init">
		<taskdef name="xdoclet" classname="org.xdoclet.ant.XDocletTask" classpathref="classpath" />
		<xdoclet  verbose="false">
			<fileset dir="src/server">
				<include name="edu/harvard/i2b2/crc/ejb/*.java" />
			</fileset>
			<component classname="org.xdoclet.plugin.ejb.EjbConfig" />
			<component classname="org.xdoclet.plugin.ejb.interfaces.LocalHomeInterfacePlugin" destdir="${gensrc}" />
			<component classname="org.xdoclet.plugin.ejb.interfaces.LocalInterfacePlugin" destdir="${gensrc}" />
			<component classname="org.xdoclet.plugin.ejb.interfaces.RemoteHomeInterfacePlugin" destdir="${gensrc}" />
			<component classname="org.xdoclet.plugin.ejb.interfaces.RemoteInterfacePlugin" destdir="${gensrc}" />
			<component classname="org.xdoclet.plugin.ejb.descriptor.EjbJarXmlPlugin" destdir="${gensrc}" />
		</xdoclet>
	</target>


	<!-- =================================================================== -->
	<!-- 								AXIS2 JAR							 -->
	<!-- =================================================================== -->
	<target name="axis2aar">
		<jar compress="true" jarfile="${dist}/${Name}.aar" manifest="${etc}/manifest/MANIFEST.MF">
			<fileset dir="${classes}">
				<include name="edu/harvard/i2b2/crc/axis2/**" />
				<include name="edu/harvard/i2b2/crc/delegate/**" />
				<exclude name="edu/harvard/i2b2/crc/axis2/*Client.**" />
			</fileset>
			<!-- added to support loader in one service --> 
			<fileset dir="../edu.harvard.i2b2.crc.loader/${classes}">
				<include name="edu/harvard/i2b2/crc/loader/ws/**" />
				<include name="edu/harvard/i2b2/crc/loader/delegate/**" />
				<exclude name="edu/harvard/i2b2/crc/loader/delegage/fr/**"/>
			</fileset>
			<!-- add pdo template file --> 
			<fileset dir="src/server/edu/harvard/i2b2/crc/delegate/pdo">
				<include name="pdo_template.xml"/>
			</fileset>
			<zipfileset dir="src/server/edu/harvard/i2b2/crc/delegate/pdo" prefix="edu/harvard/i2b2/crc/delegate/pdo" includes="pdo_template.xml" />

			<!-- end -->
			<zipfileset dir="src/server/edu/harvard/i2b2/crc/axis2/META-INF" prefix="META-INF" includes="services.xml" />
			<zipfileset dir="../${i2b2CommonProject}/dist/" prefix="lib" includes="*.jar" />
			

		</jar>
	</target>


	<!-- =================================================================== -->
	<!-- 							DEPLOYMENT 								 -->
	<!-- =================================================================== -->
	<target name="deploy" description="Deployment step:copy distribution jar files to app server">
		<!-- deploy application's property file and Spring xml file -->
		<antcall target="property_deploy" />
		<!-- deploy service -->
		<antcall target="service_deploy" />
		<!-- deploy datasources and jms persistance files to jboss -->
		<antcall target="datasource_jmspersistance_deploy" />
	</target>

	<!-- copy deployment archive files to jboss -->
	<target name="service_deploy">
		<echo message="${Name}: Copying archive package to app server ${jboss.home}" />
		<copy todir="${jboss.home}/server/default/deploy">
			<fileset dir="${dist}">
				<exclude name="*-EJB.jar" />
				<exclude name="**/**.aar" />
				<exclude name="**/*client.jar" />
				<exclude name="**/*.sar" />
			</fileset>
		</copy>
		<copy todir="${jboss.home}/server/default/deploy/deploy.last">
			<fileset dir="${dist}">
			   <include name="*.sar" />
			</fileset>
		</copy>
		<!-- copy axis archive files to axis directory -->
		<copy todir="${jboss.home}/server/default/deploy/${axis2.war.name}/WEB-INF/services">
			<fileset dir="${dist}">
				<include name="**/**.aar" />
			</fileset>
		</copy>
		<!-- deploy uploader service files --> 
		<subant target="service_deploy">
			<fileset dir="../${crcUploaderProject}" includes="build.xml" />
		</subant>
	</target>
	
	<!-- deploy property setting -->
	<target name="property_deploy">
		<echo message="copying property files to ${edu.harvard.i2b2.crc.applicationdir}" />
		<copy todir="${edu.harvard.i2b2.crc.applicationdir}">
			<fileset dir="${etc}/spring">
				<exclude name="crc_application_directory.properties" />
			</fileset>
		</copy>
		<!-- deploy uploader property files --> 
		<subant target="property_deploy">
			<fileset dir="../${crcUploaderProject}" includes="build.xml" />
		</subant>
	</target>
	
	<!-- deploy datasource and jms persistance setup files to jboss --> 
	<target name="datasource_jmspersistance_deploy">
		<copy todir="${jboss.home}/server/default/deploy">
			<fileset dir="${etc}/jboss">
				<exclude name="**/jboss.xml" />
				<exclude name="**/crc-oracle-jdbc2-service.xml" />
				<exclude name="**/crc-mssql-jdbc2-service.xml" />
			</fileset>
		</copy>

		<!-- use oracle/mssql for jms queue -->
		<copy todir="${jboss.home}/server/default/deploy/jms">
			<fileset dir="${etc}/jboss">
				<include name="**/crc-${jboss.jms.persistance}-jdbc2-service.xml" />
			</fileset>
		</copy>
		<!-- remove default hsql persistance for jms queue -->
		<delete includeemptydirs="true">
			<fileset dir="${jboss.home}/server/default/deploy/jms" includes="**/hsqldb-jdbc2-service.xml" />
			<fileset dir="${jboss.home}/server/default/deploy" includes="**/hsqldb-ds.xml" />
		</delete>
		
		<!-- deploy uploader queue files --> 
		<subant target="datasource_deploy">
			<fileset dir="../${crcUploaderProject}" includes="build.xml" />
		</subant>
		
	</target>
	
	
	<!-- =================================================================== -->
	<!-- 			RUN JUNIT TESTS AND GENERATE REPORT			 			 -->
	<!-- =================================================================== -->
	<target name="test" depends="compile" description="Compile and run JUnit tests and testcases">
		<echo message="${Name}: Running test cases!" />
		<property name="reports.dir" value="${report}" />

		<!-- run the unit tests -->
		<junit fork="yes" haltonfailure="no" maxmemory="2048M" printsummary="on" errorProperty="test.failed" failureProperty="test.failed" showoutput="false">
			<formatter type="xml" />
			<jvmarg value="-Dtestfiledir=${testfiledir}" />
			<jvmarg value="-Dtesthost=${testhost}" />
			<jvmarg value="-Djava.endorsed.dirs=endorsed_lib" />
			<!--<test name="AllTests" todir="${report.dir}"/>-->
			<batchtest fork="yes" todir="${reports.dir}">
				<fileset dir="${src}/test">
					<include name="**/SetfinderQueryTest.java" /> 
					<exclude name="**/AllTests.java" />
				</fileset>
			</batchtest>
			<classpath>
				<path refid="classpath" />
				<pathelement location="${etc}/spring" />
			</classpath>
		</junit>
		<!-- create the junit test report -->
		<echo message="${Name}: Generating reports!" />
		<junitreport>
			<fileset dir="${reports.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports.dir}" />
		</junitreport>
		<fail message="Tests failed." if="test.failed" />
	</target>

	

</project>


