/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jcluto_JClutoWrapper */

#ifndef _Included_jcluto_JClutoWrapper
#define _Included_jcluto_JClutoWrapper
#ifdef __cplusplus
extern "C" {
#endif
#undef jcluto_JClutoWrapper_CLUTO_ROWMODEL_NONE
#define jcluto_JClutoWrapper_CLUTO_ROWMODEL_NONE 1L
#undef jcluto_JClutoWrapper_CLUTO_ROWMODEL_MAXTF
#define jcluto_JClutoWrapper_CLUTO_ROWMODEL_MAXTF 2L
#undef jcluto_JClutoWrapper_CLUTO_ROWMODEL_SQRT
#define jcluto_JClutoWrapper_CLUTO_ROWMODEL_SQRT 3L
#undef jcluto_JClutoWrapper_CLUTO_ROWMODEL_LOG
#define jcluto_JClutoWrapper_CLUTO_ROWMODEL_LOG 4L
#undef jcluto_JClutoWrapper_CLUTO_COLMODEL_NONE
#define jcluto_JClutoWrapper_CLUTO_COLMODEL_NONE 1L
#undef jcluto_JClutoWrapper_CLUTO_COLMODEL_IDF
#define jcluto_JClutoWrapper_CLUTO_COLMODEL_IDF 2L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_I1
#define jcluto_JClutoWrapper_CLUTO_CLFUN_I1 1L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_I2
#define jcluto_JClutoWrapper_CLUTO_CLFUN_I2 2L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_E1
#define jcluto_JClutoWrapper_CLUTO_CLFUN_E1 3L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_G1
#define jcluto_JClutoWrapper_CLUTO_CLFUN_G1 4L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_G1P
#define jcluto_JClutoWrapper_CLUTO_CLFUN_G1P 5L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_H1
#define jcluto_JClutoWrapper_CLUTO_CLFUN_H1 6L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_H2
#define jcluto_JClutoWrapper_CLUTO_CLFUN_H2 7L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_SLINK
#define jcluto_JClutoWrapper_CLUTO_CLFUN_SLINK 8L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_SLINK_W
#define jcluto_JClutoWrapper_CLUTO_CLFUN_SLINK_W 9L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_CLINK
#define jcluto_JClutoWrapper_CLUTO_CLFUN_CLINK 10L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_CLINK_W
#define jcluto_JClutoWrapper_CLUTO_CLFUN_CLINK_W 11L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_UPGMA
#define jcluto_JClutoWrapper_CLUTO_CLFUN_UPGMA 12L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_UPGMA_W
#define jcluto_JClutoWrapper_CLUTO_CLFUN_UPGMA_W 13L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_CUT
#define jcluto_JClutoWrapper_CLUTO_CLFUN_CUT 15L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_RCUT
#define jcluto_JClutoWrapper_CLUTO_CLFUN_RCUT 16L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_NCUT
#define jcluto_JClutoWrapper_CLUTO_CLFUN_NCUT 17L
#undef jcluto_JClutoWrapper_CLUTO_CLFUN_MMCUT
#define jcluto_JClutoWrapper_CLUTO_CLFUN_MMCUT 18L
#undef jcluto_JClutoWrapper_CLUTO_CSTYPE_LARGEFIRST
#define jcluto_JClutoWrapper_CLUTO_CSTYPE_LARGEFIRST 1L
#undef jcluto_JClutoWrapper_CLUTO_CSTYPE_BESTFIRST
#define jcluto_JClutoWrapper_CLUTO_CSTYPE_BESTFIRST 2L
#undef jcluto_JClutoWrapper_CLUTO_CSTYPE_LARGESUBSPACEFIRST
#define jcluto_JClutoWrapper_CLUTO_CSTYPE_LARGESUBSPACEFIRST 3L
#undef jcluto_JClutoWrapper_CLUTO_DBG_PROGRESS
#define jcluto_JClutoWrapper_CLUTO_DBG_PROGRESS 1L
#undef jcluto_JClutoWrapper_CLUTO_DBG_RPROGRESS
#define jcluto_JClutoWrapper_CLUTO_DBG_RPROGRESS 2L
#undef jcluto_JClutoWrapper_CLUTO_DBG_APROGRESS
#define jcluto_JClutoWrapper_CLUTO_DBG_APROGRESS 4L
#undef jcluto_JClutoWrapper_CLUTO_DBG_CPROGRESS
#define jcluto_JClutoWrapper_CLUTO_DBG_CPROGRESS 8L
#undef jcluto_JClutoWrapper_CLUTO_DBG_MPROGRESS
#define jcluto_JClutoWrapper_CLUTO_DBG_MPROGRESS 16L
#undef jcluto_JClutoWrapper_CLUTO_DBG_CCMPSTAT
#define jcluto_JClutoWrapper_CLUTO_DBG_CCMPSTAT 32L
#undef jcluto_JClutoWrapper_CLUTO_MEM_NOREUSE
#define jcluto_JClutoWrapper_CLUTO_MEM_NOREUSE 1L
#undef jcluto_JClutoWrapper_CLUTO_MEM_REUSE
#define jcluto_JClutoWrapper_CLUTO_MEM_REUSE 2L
#undef jcluto_JClutoWrapper_CLUTO_TREE_TOP
#define jcluto_JClutoWrapper_CLUTO_TREE_TOP 1L
#undef jcluto_JClutoWrapper_CLUTO_TREE_FULL
#define jcluto_JClutoWrapper_CLUTO_TREE_FULL 2L
#undef jcluto_JClutoWrapper_CLUTO_SIM_COSINE
#define jcluto_JClutoWrapper_CLUTO_SIM_COSINE 1L
#undef jcluto_JClutoWrapper_CLUTO_SIM_CORRCOEF
#define jcluto_JClutoWrapper_CLUTO_SIM_CORRCOEF 2L
#undef jcluto_JClutoWrapper_CLUTO_SIM_EDISTANCE
#define jcluto_JClutoWrapper_CLUTO_SIM_EDISTANCE 3L
#undef jcluto_JClutoWrapper_CLUTO_SIM_EJACCARD
#define jcluto_JClutoWrapper_CLUTO_SIM_EJACCARD 4L
#undef jcluto_JClutoWrapper_CLUTO_OPTIMIZER_SINGLELEVEL
#define jcluto_JClutoWrapper_CLUTO_OPTIMIZER_SINGLELEVEL 1L
#undef jcluto_JClutoWrapper_CLUTO_OPTIMIZER_MULTILEVEL
#define jcluto_JClutoWrapper_CLUTO_OPTIMIZER_MULTILEVEL 2L
#undef jcluto_JClutoWrapper_CLUTO_MTYPE_HEDGE
#define jcluto_JClutoWrapper_CLUTO_MTYPE_HEDGE 1L
#undef jcluto_JClutoWrapper_CLUTO_MTYPE_HSTAR
#define jcluto_JClutoWrapper_CLUTO_MTYPE_HSTAR 2L
#undef jcluto_JClutoWrapper_CLUTO_MTYPE_HSTAR2
#define jcluto_JClutoWrapper_CLUTO_MTYPE_HSTAR2 3L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_EXACT_ASYMETRIC_DIRECT
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_EXACT_ASYMETRIC_DIRECT 1L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_EXACT_SYMETRIC_DIRECT
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_EXACT_SYMETRIC_DIRECT 2L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_INEXACT_ASYMETRIC_DIRECT
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_INEXACT_ASYMETRIC_DIRECT 3L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_INEXACT_SYMETRIC_DIRECT
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_INEXACT_SYMETRIC_DIRECT 4L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_EXACT_ASYMETRIC_LINKS
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_EXACT_ASYMETRIC_LINKS 5L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_EXACT_SYMETRIC_LINKS
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_EXACT_SYMETRIC_LINKS 6L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_INEXACT_ASYMETRIC_LINKS
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_INEXACT_ASYMETRIC_LINKS 7L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_INEXACT_SYMETRIC_LINKS
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_INEXACT_SYMETRIC_LINKS 8L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_ASYMETRIC_DIRECT
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_ASYMETRIC_DIRECT 1L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_ASYMETRIC_LINKS
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_ASYMETRIC_LINKS 5L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_SYMETRIC_DIRECT
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_SYMETRIC_DIRECT 2L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_SYMETRIC_LINKS
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_SYMETRIC_LINKS 6L
#undef jcluto_JClutoWrapper_CLUTO_GRMODEL_NONE
#define jcluto_JClutoWrapper_CLUTO_GRMODEL_NONE 9L
#undef jcluto_JClutoWrapper_CLUTO_SUMMTYPE_MAXCLIQUES
#define jcluto_JClutoWrapper_CLUTO_SUMMTYPE_MAXCLIQUES 1L
#undef jcluto_JClutoWrapper_CLUTO_SUMMTYPE_MAXITEMSETS
#define jcluto_JClutoWrapper_CLUTO_SUMMTYPE_MAXITEMSETS 2L
#undef jcluto_JClutoWrapper_CLUTO_VER_MAJOR
#define jcluto_JClutoWrapper_CLUTO_VER_MAJOR 2L
#undef jcluto_JClutoWrapper_CLUTO_VER_MINOR
#define jcluto_JClutoWrapper_CLUTO_VER_MINOR 1L
#undef jcluto_JClutoWrapper_CLUTO_VER_SUBMINOR
#define jcluto_JClutoWrapper_CLUTO_VER_SUBMINOR 0L
/* Inaccessible static: class_00024jcluto_00024JClutoWrapper */
/*
 * Class:     jcluto_JClutoWrapper
 * Method:    VP_ClusterDirect
 * Signature: (II[I[I[FIIIIFIIIII[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_VP_1ClusterDirect
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jint, jfloat, jint, jint, jint, jint, jint, jintArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    VP_ClusterRB
 * Signature: (II[I[I[FIIIIFIIIIIII[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_VP_1ClusterRB
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jint, jfloat, jint, jint, jint, jint, jint, jint, jint, jintArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    VP_ClusterRBTree
 * Signature: (II[I[I[FIIIIFIIIII[I[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_VP_1ClusterRBTree
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jint, jfloat, jint, jint, jint, jint, jint, jintArray, jintArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    VA_Cluster
 * Signature: (II[I[I[FIIIIFII[I[I[F[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_VA_1Cluster
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jint, jfloat, jint, jint, jintArray, jintArray, jfloatArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    VA_ClusterBiased
 * Signature: (II[I[I[FIIIIFIII[I[I[F[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_VA_1ClusterBiased
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jint, jfloat, jint, jint, jint, jintArray, jintArray, jfloatArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    SP_ClusterRB
 * Signature: (I[I[I[FIIIIIIII[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_SP_1ClusterRB
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jint, jint, jint, jint, jint, jintArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    SP_ClusterDirect
 * Signature: (I[I[I[FIIIIII[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_SP_1ClusterDirect
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jint, jint, jint, jintArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    SA_Cluster
 * Signature: (I[I[I[FIII[I[I[F[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_SA_1Cluster
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jintArray, jintArray, jfloatArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    VP_GraphClusterRB
 * Signature: (II[I[I[FIIIFIIFFIIIIII[I[F)I
 */
JNIEXPORT jint JNICALL Java_jcluto_JClutoWrapper_VP_1GraphClusterRB
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jint, jint, jfloat, jfloat, jint, jint, jint, jint, jint, jint, jintArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    SP_GraphClusterRB
 * Signature: (I[I[I[FIFFIIIIII[I[F)I
 */
JNIEXPORT jint JNICALL Java_jcluto_JClutoWrapper_SP_1GraphClusterRB
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jfloat, jfloat, jint, jint, jint, jint, jint, jint, jintArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_GetGraph
 * Signature: (II[I[I[FIIIFIII[[I[[I[[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_V_1GetGraph
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jint, jint, jint, jobjectArray, jobjectArray, jobjectArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    S_GetGraph
 * Signature: (I[I[I[FIII[[I[[I[[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_S_1GetGraph
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jobjectArray, jobjectArray, jobjectArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_GetSolutionQuality
 * Signature: (II[I[I[FIIIIFI[I)F
 */
JNIEXPORT jfloat JNICALL Java_jcluto_JClutoWrapper_V_1GetSolutionQuality
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jint, jfloat, jint, jintArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    S_GetSolutionQuality
 * Signature: (I[I[I[FII[I)F
 */
JNIEXPORT jfloat JNICALL Java_jcluto_JClutoWrapper_S_1GetSolutionQuality
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jint, jintArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_GetClusterStats
 * Signature: (II[I[I[FIIIFI[I[I[F[F[F[F[F[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_V_1GetClusterStats
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jint, jintArray, jintArray, jfloatArray, jfloatArray, jfloatArray, jfloatArray, jfloatArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    S_GetClusterStats
 * Signature: (I[I[I[FI[I[I[F[F[F[F[F[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_S_1GetClusterStats
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jintArray, jintArray, jfloatArray, jfloatArray, jfloatArray, jfloatArray, jfloatArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_GetClusterFeatures
 * Signature: (II[I[I[FIIIFI[II[I[F[I[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_V_1GetClusterFeatures
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jint, jintArray, jint, jintArray, jfloatArray, jintArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_BuildTree
 * Signature: (II[I[I[FIIIIFIII[I[I[F[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_V_1BuildTree
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jint, jfloat, jint, jint, jint, jintArray, jintArray, jfloatArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    S_BuildTree
 * Signature: (I[I[I[FIIII[I[I[F[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_S_1BuildTree
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jint, jintArray, jintArray, jfloatArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_GetTreeStats
 * Signature: (II[I[I[FIIIFI[I[I[I[F[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_V_1GetTreeStats
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jint, jintArray, jintArray, jintArray, jfloatArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_GetTreeFeatures
 * Signature: (II[I[I[FIIIFI[I[II[I[F[I[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_V_1GetTreeFeatures
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jint, jintArray, jintArray, jint, jintArray, jfloatArray, jintArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    InternalizeMatrix
 * Signature: (II[I[I[FIIIF[I[I[I[[I[[I[[F[[I[[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_InternalizeMatrix
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jintArray, jintArray, jintArray, jobjectArray, jobjectArray, jobjectArray, jobjectArray, jobjectArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_TreeReorder
 * Signature: (II[I[I[FIIIFI[I[[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_V_1TreeReorder
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jint, jintArray, jobjectArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    S_TreeReorder
 * Signature: (I[I[I[FI[I[[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_S_1TreeReorder
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jintArray, jobjectArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_ClusterTreeReorder
 * Signature: (II[I[I[FIIIFII[I[I[[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_V_1ClusterTreeReorder
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jint, jint, jintArray, jintArray, jobjectArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    S_ClusterTreeReorder
 * Signature: (I[I[I[FII[I[I[[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_S_1ClusterTreeReorder
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jint, jintArray, jintArray, jobjectArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_ReorderPartitions
 * Signature: (II[I[I[FIIIFI[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_V_1ReorderPartitions
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jint, jintArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    S_ReorderPartitions
 * Signature: (I[I[I[FI[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_S_1ReorderPartitions
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jintArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_GetClusterDistanceMatrix
 * Signature: (II[I[I[FIIIFII[I[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_V_1GetClusterDistanceMatrix
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jint, jint, jintArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    S_GetClusterDistanceMatrix
 * Signature: (I[I[I[FII[I[F)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_S_1GetClusterDistanceMatrix
  (JNIEnv *, jclass, jint, jintArray, jintArray, jfloatArray, jint, jint, jintArray, jfloatArray);

/*
 * Class:     jcluto_JClutoWrapper
 * Method:    V_GetClusterSummaries
 * Signature: (II[I[I[FIIIFI[III[I[[I[[F[[I[[I)V
 */
JNIEXPORT void JNICALL Java_jcluto_JClutoWrapper_V_1GetClusterSummaries
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jfloatArray, jint, jint, jint, jfloat, jint, jintArray, jint, jint, jintArray, jobjectArray, jobjectArray, jobjectArray, jobjectArray);

#ifdef __cplusplus
}
#endif
#endif
