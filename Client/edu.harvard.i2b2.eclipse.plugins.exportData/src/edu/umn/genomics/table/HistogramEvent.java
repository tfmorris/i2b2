/*
 * @(#) $RCSfile: HistogramEvent.java,v $ $Revision: 1.3 $ $Date: 2008/10/31 17:43:22 $ $Name: RELEASE_1_3_1_0001b $
 *
 * Center for Computational Genomics and Bioinformatics
 * Academic Health Center, University of Minnesota
 * Copyright (c) 2000-2002. The Regents of the University of Minnesota
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * see: http://www.gnu.org/copyleft/gpl.html
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */

package edu.umn.genomics.table;

import java.util.*;

/**
 * An event generated by a change to a HistogramModel.
 * 
 * @author J Johnson
 * @version %I%, %G%
 * @since 1.0
 */
public class HistogramEvent extends EventObject {
    private static final BinModel[] empty = new BinModel[0];
    BinModel[] removed = empty;
    BinModel[] added = empty;
    boolean isAdjusting = false;

    public HistogramEvent(Object source) {
	this(source, null, null, false);
    }

    public HistogramEvent(Object source, boolean isAdjusting) {
	this(source, null, null, isAdjusting);
    }

    public HistogramEvent(Object source, BinModel[] removed, BinModel[] added,
	    boolean isAdjusting) {
	super(source);
	this.isAdjusting = isAdjusting;
	this.removed = removed != null ? removed : empty;
	this.added = added != null ? added : empty;
    }

    public boolean isAdjusting() {
	return isAdjusting;
    }

    public boolean binModelsChanged() {
	return (removed.length > 0) || (added.length > 0);
    }

    public BinModel[] getBinModelsRemoved() {
	return removed;
    }

    public BinModel[] getBinModelsAdded() {
	return added;
    }

    @Override
    public String toString() {
	return super.toString() + "(removed " + removed.length + ",added "
		+ added.length + ",isAdjusting=" + isAdjusting + ")";
    }
}
