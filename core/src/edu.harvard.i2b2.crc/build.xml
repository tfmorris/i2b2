<?xml version="1.0" encoding="UTF-8"?>
<!--
$Id: build.xml,v 1.24.2.2 2007/11/02 16:43:10 rk903 Exp $
-->
<project name="QueryProcessor" basedir="." default="dist">

	<property name="Name" value="QueryProcessor" />
	<import file="../edu.harvard.i2b2.common/common_build.xml" />
	<property environment="env" />

	<!-- OTHER SETTINGS -->
	<property name="javac.debug" value="true" />
	<property name="javac.opt" value="false" />
	<property name="ejbspec" value="2.0" />
	<property name="jboss.version" value="4.0" />


	<property file="etc/spring/crc_application_directory.properties" />
	<property file="db.oracle.properties" />

	<!-- =================================================================== -->
	<!-- 								INIT 								 -->
	<!-- =================================================================== -->
	<target name="init" depends="common_init,common-classpath" description="Prepare for build">
		<path id="classpath">
			<path refid="common-classpath" />
			<fileset dir="${genlib}">
				<include name="*.jar" />
			</fileset>
			<pathelement location="${classes}" />
			<pathelement location="../${i2b2CommonProject}/dist/i2b2Common-core.jar" />
		</path>
		<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
			<classpath refid="classpath" />
		</taskdef>
	</target>



	<!-- =================================================================== -->
	<!-- 								COMMON JAXB GENERATION 				 -->
	<!-- =================================================================== -->
	<target name="jaxb_gen" depends="init" description="Generate JAXB classes for i2b2 and Patient Data messages">

		<xjc extension="true" destdir="${gensrc}" removeOldOutput="no">
			<schema dir="../${i2b2xmlproject}/xsd/hive/pdo_1.1" includes="i2b2_PDO.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/hive/msg_1.1" includes="i2b2_response.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/cell/crc/pdo_1.1" includes="CRC_PDO_QRY.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/cell/crc/psm_1.1" includes="CRC_PSM_QRY.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/cell/crc/psm_1.1" includes="CRC_PSM_QRY_query_definition.xsd" />
			<schema dir="../${i2b2xmlproject}/xsd/cell/pm_1.1" includes="PM_USER.xsd" />
			<binding dir="." includes="etc/xsd/i2b2_pdo.xjb" />
			<binding dir="." includes="etc/xsd/i2b2_response.xjb" />
			<binding dir="." includes="etc/xsd/crc_pdo_qry.xjb" />
			<binding dir="." includes="etc/xsd/crc_psm_qry.xjb" />
			<binding dir="." includes="etc/xsd/crc_psm_querydefinition.xjb" />
			<binding dir="." includes="etc/xsd/i2b2_pm_bindings.xjb" />
		</xjc>

		<!--
		 <java dir="." jar="../edu.harvard.i2b2.common/lib/jaxb/jaxb-xjc.jar" fork="true" failonerror="true" >
		 	<arg line="-quiet -nv -extension ../edu.harvard.i2b2.xml/xsd/hive/pdo_1.1/i2b2_PDO.xsd -b etc/xsd/i2b2_pdo.xjb 
		 		-d ${gensrc}"/>
            <jvmarg value="-Djava.endorsed.dirs=../edu.harvard.i2b2.common/lib/jaxb" />
            <classpath refid="classpath"/>
		  </java>
		 -->
	</target>


	<!-- =================================================================== -->
	<!-- 								CLEAN 								 -->
	<!-- =================================================================== -->
	<target name="clean" depends="common_clean" description="Clean all build products" />



	<!-- =================================================================== -->
	<!-- 								COMPILE 							 -->
	<!-- =================================================================== -->
	<target name="compile" depends="init" description="Compile files without cleaning">
		<mkdir dir="${classes}" />
		<javac destdir="${classes}" optimize="${javac.opt}" debug="${javac.debug}">
			<src path="${gensrc}" />
			<src path="${src}/server/" />


			<src path="${src}/test" />

			<src path="${src}/client" />
			<classpath refid="classpath" />
		</javac>
	</target>

	<!-- =================================================================== -->
	<!-- 								GENERATE XML & POJO from schema 	 -->
	<!-- =================================================================== -->
	<target name="generate-hbm" depends="init">
		<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="classpath" />
		<hibernatetool destdir="gensrc">
			<jdbcconfiguration packagename="edu.harvard.i2b2.crc.datavo.querytool" propertyfile="${etc}/hibernate.properties" revengfile="${etc}/hibernate2.reveng.xml" />
			<hbm2hbmxml destdir="gensrc" />
			<hbm2java jdk5="true" />
			<hbm2cfgxml ejb3="true" />
		</hibernatetool>
	</target>




	<!-- =================================================================== -->
	<!-- 								DIST 								 -->
	<!-- =================================================================== -->
	<target name="dist" depends="init,jaxb_gen,generate-ejb,compile" description="package application for distribution/deployment">
		<!-- Package EJB for jboss -->
		<echo message="${Name}: Creating the ejb archive package!" />
		<jar destfile="${dist}/${Name}-EJB.jar" manifest="${etc}/manifest/MANIFEST.MF">
			<fileset dir="${classes}">
				<exclude name="edu/harvard/i2b2/crc/axis2/**/**" />
				<exclude name="edu/harvard/i2b2/crc/delegate/**" />
			</fileset>
			<zipfileset dir="${gensrc}" prefix="META-INF" includes="ejb-jar.xml" />
			<zipfileset dir="${etc}/jboss" prefix="META-INF" includes="jboss.xml" />
			<zipfileset dir="../${i2b2CommonProject}/dist/" prefix="lib" includes="*.jar"/>
		</jar>

		<antcall target="dist-server" />
		<antcall target="axis2aar" />
		<antcall target="dist-client" />
		<antcall target="hibernate-har" />

	</target>

	<!-- =================================================================== -->
	<!-- 								SERVER DIST							 -->
	<!-- =================================================================== -->
	<target name="dist-server" depends="init,compile" description="package application for distribution/deployment">
		<echo message="${Name}: Creating the server archive package!" />
		<jar compress="true" jarfile="${dist}/${Name}-Server.jar">
			<fileset dir="${etc}/spring">
				<include name="crc_application_directory.*" />
			</fileset>
		</jar>
	</target>

	<!-- =================================================================== -->
	<!-- 								CLIENT DIST							 -->
	<!-- =================================================================== -->
	<target name="dist-client" depends="init,compile" description="package application for distribution/deployment">
		<jar destfile="${dist}/${Name}-client.jar">
			<fileset dir="${classes}">
				<!-- <include name="edu/harvard/i2b2/querytool/axis2/**/**" /> -->
				<exclude name="edu/harvard/i2b2/crc/axis2/**/**" />
				<include name="edu/harvard/i2b2/crc/datavo/**/**" />
			</fileset>
		</jar>
	</target>


	<!-- =================================================================== -->
	<!-- 								HIBERNATE HAR FILE 					 -->
	<!-- =================================================================== -->
	<target name="hibernate-har">
		<jar destfile="${dist}/${Name}.har">
			<!-- Get the generated hbm.xml files -->
			<fileset dir="${etc}/hibernate">
				<include name="**/*.hbm.xml" />
			</fileset>

			<!-- Get the hibernate class files -->
			<fileset dir="${classes}">
				<include name="edu/harvard/i2b2/crc/datavo/db/**/*.class" />
			</fileset>

			<fileset dir="${lib}">
				<include name="cglib2.1.3.jar" />
				<include name="commons-collections.jar" />
				<include name="commons-logging-1.0.4.jar" />
				<include name="dom4j01.6.1.jar" />
				<include name="hibernate3.jar" />
				<include name="ehcache-1.1.jar" />
				<!-- 
					<include name="odmg.jar"/>
					<include name="ehcache-1.1.jar"/>
				-->
			</fileset>

			<metainf dir="${etc}/jboss">
				<include name="hibernate-service.xml" />
				<include name="ehcache.xml" />
			</metainf>
		</jar>
	</target>


	<!-- =================================================================== -->
	<!-- 								Generate EJB						 -->
	<!-- =================================================================== -->
	<target name="generate-ejb" depends="init">
		<taskdef name="xdoclet" classname="org.xdoclet.ant.XDocletTask" classpathref="classpath" />
		<xdoclet>
			<fileset dir="src/server">
				<include name="edu/harvard/i2b2/crc/ejb/*.java" />
			</fileset>
			<component classname="org.xdoclet.plugin.ejb.EjbConfig" />
			<component classname="org.xdoclet.plugin.ejb.interfaces.LocalHomeInterfacePlugin" destdir="${gensrc}" />
			<component classname="org.xdoclet.plugin.ejb.interfaces.LocalInterfacePlugin" destdir="${gensrc}" />
			<component classname="org.xdoclet.plugin.ejb.interfaces.RemoteHomeInterfacePlugin" destdir="${gensrc}" />
			<component classname="org.xdoclet.plugin.ejb.interfaces.RemoteInterfacePlugin" destdir="${gensrc}" />
			<component classname="org.xdoclet.plugin.ejb.descriptor.EjbJarXmlPlugin" destdir="${gensrc}" />
		</xdoclet>
	</target>


	<!-- =================================================================== -->
	<!-- 								AXIS2 JAR							 -->
	<!-- =================================================================== -->
	<target name="axis2aar">
		<jar compress="true" jarfile="${dist}/${Name}.aar" manifest="${etc}/manifest/MANIFEST.MF">
			<fileset dir="${classes}">
				<include name="edu/harvard/i2b2/crc/axis2/**" />
				<include name="edu/harvard/i2b2/crc/delegate/**" />
				<exclude name="edu/harvard/i2b2/crc/axis2/*Client.**" />
			</fileset>
			<zipfileset dir="src/server/edu/harvard/i2b2/crc/axis2/META-INF" prefix="META-INF" includes="services.xml" />
			<zipfileset dir="../${i2b2CommonProject}/dist/" prefix="lib" includes="*.jar"/>
						
		</jar>
	</target>


	<!-- =================================================================== -->
	<!-- 							DEPLOYMENT 								 -->
	<!-- =================================================================== -->
	<target name="deploy" description="Deployment step:copy distribution jar files to app server">
		<echo message="${Name}: Copying archive package to app server ${jboss.home}" />
		<copy todir="${jboss.home}/server/default/deploy">
			<fileset dir="${dist}">
				<exclude name="**/**.aar" />
				<exclude name="**/*client.jar" />
			</fileset>
		</copy>

		<copy todir="${jboss.home}/server/default/deploy">
			<fileset dir="${etc}/jboss">
				<exclude name="**/jboss.xml" />
				<exclude name="**/ehcache.xml" />
				<exclude name="**/hibernate-service.xml" />
				<exclude name="**/crc-oracle-jdbc2-service.xml" />
			</fileset>
		</copy>

		<!-- use oracle for jms queue -->
		<copy todir="${jboss.home}/server/default/deploy/jms">
			<fileset dir="${etc}/jboss">
				<include name="**/crc-oracle-jdbc2-service.xml" />
			</fileset>
		</copy>
		<!-- remove default hsql persistance for jms queue -->
		<delete includeemptydirs="true">
			<fileset dir="${jboss.home}/server/default/deploy/jms" includes="**/hsqldb-jdbc2-service.xml" />
			<fileset dir="${jboss.home}/server/default/deploy" includes="**/hsqldb-ds.xml" />
		</delete>

		<!-- copy axis archive files to axis directory -->
		<copy todir="${jboss.home}/server/default/deploy/${axis2.war.name}/WEB-INF/services">
			<fileset dir="${dist}">
				<include name="**/**.aar" />
			</fileset>
		</copy>

		<echo message="copying property files to ${edu.harvard.i2b2.crc.applicationdir}" />
		<copy todir="${edu.harvard.i2b2.crc.applicationdir}">
			<fileset dir="${etc}/spring">
				<exclude name="crc_application_directory.properties" />
			</fileset>
		</copy>
	</target>



	<!-- =================================================================== -->
	<!-- 			RUN JUNIT TESTS AND GENERATE REPORT			 			 -->
	<!-- =================================================================== -->
	<target name="test" depends="compile" description="Compile and run JUnit tests and testcases">
		<echo message="${Name}: Running test cases!" />
		<property name="reports.dir" value="${report}" />
		<!-- run the unit tests -->
		<junit fork="yes" haltonfailure="no" maxmemory="512M" printsummary="on" errorProperty="test.failed" failureProperty="test.failed" showoutput="true">
			<formatter type="xml" />
			 <jvmarg value="-Dtestfiledir=${testfiledir}"/>
			<!--<test name="AllTests" todir="${report.dir}"/>-->
			<batchtest fork="yes" todir="${reports.dir}">
				<fileset dir="${src}/test">
					<include name="**/PdoQueryTest.java" />
					<exclude name="**/AllTests.java" />
				</fileset>
			</batchtest>
			<classpath>
				<path refid="classpath" />
				<pathelement location="${etc}/spring"/>
			</classpath>
		</junit>
		<!-- create the junit test report -->
		<echo message="${Name}: Generating reports!" />
		<junitreport>
			<fileset dir="${reports.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports.dir}" />
		</junitreport>
		<fail message="Tests failed." if="test.failed" />
	</target>

	<!-- =================================================================== -->
	<!-- 			DATABASE SETUP TARGETS						 			 -->
	<!-- =================================================================== -->
	<target name="db_create_user" depends="init">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.username}" password="${db.password}" classpathref="classpath" onerror="continue" print="true">
					CREATE USER  i2b2demodata IDENTIFIED BY   i2b2demodata;
					CREATE USER  i2b2metadata IDENTIFIED BY   i2b2metadata;
				</sql>
	</target>

	<target name="db_demodata_create_table" depends="init">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.username}" password="${db.password}" classpathref="classpath" onerror="continue" print="true">
			<transaction src="${db.script.dir}/i2b2demodata_create.sql" />
		</sql>
	</target>

	<target name="db_demodata_load_data" depends="init">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.username}" password="${db.password}" classpathref="classpath" onerror="continue" print="true">
			<transaction src="${db.script.dir}/i2b2demodata_data.sql" />
		</sql>
	</target>

	<target name="db_metadata_create_table" depends="init">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.username}" password="${db.password}" classpathref="classpath" onerror="continue" print="true">
			<transaction src="${db.script.dir}/i2b2metadata_create.sql" />
		</sql>
	</target>

	<target name="db_metadata_load_data" depends="init">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.username}" password="${db.password}" classpathref="classpath" onerror="continue" print="true">
			<transaction src="${db.script.dir}/i2b2metadata_data.sql" />
		</sql>
	</target>
	
	<target name="db_grant_metadata" depends="init">
			<sql driver="${db.driver}" url="${db.url}" userid="${db.username}" password="${db.password}" classpathref="classpath" onerror="continue" print="true">
				GRANT SELECT ON i2b2 to  i2b2demodata ;
				GRANT SELECT ON labs to  i2b2demodata ;
				GRANT SELECT ON schemes to  i2b2demodata ;
				GRANT SELECT ON table_access to  i2b2demodata ;
			</sql>
	</target>

</project>


